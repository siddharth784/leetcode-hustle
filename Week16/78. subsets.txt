class Solution {
// USE BACKTRACKING
    List<List<Integer>> subsets=new ArrayList<>();
    
    public List<List<Integer>> subsets(int[] nums) {
        // List<List<Integer>> ans=new ArrayList<>();
        backtracking(nums,0,new ArrayList<>());
        return subsets;
    }
    
    public void backtracking(int[] nums, int idx, List<Integer> li){
        if(idx==nums.length)
            subsets.add(new ArrayList<>(li));
        else{
            List<Integer> hold=new ArrayList<>();
            for(int i:li)
                hold.add(i);
            hold.add(nums[idx]);

            backtracking(nums,idx+1,li);
            backtracking(nums,idx+1,hold);        
        }
    }
}


cuz: 


idx values                
   ||                 []
                   /     \
1                  []      [1]
                 / \       /    \
2               []  [2]   [1]   [1,2]
                /\   /\     /\       | \
3              [] [3][2][2,3][1][1,3] [1,2][1,2,3]



[]
| \
|  \
|   \
[]   [1]
|\     \
| \     \
|  \     \ 
[]  [2]   [1]