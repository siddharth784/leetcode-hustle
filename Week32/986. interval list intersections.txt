class Solution {
    public int[][] intervalIntersection(int[][] firstList, int[][] secondList) {
        int i=0,j=0;
        List<Integer[]> li=new ArrayList<>();
        while(i<firstList.length && j<secondList.length){
            if(firstList[i][0]<secondList[j][0]){
                if(firstList[i][1]<secondList[j][0]){
                    i++;
                }
                else{
                    if(firstList[i][1]<secondList[j][1]){
                        li.add(new Integer[]{secondList[j][0],firstList[i][1]});
                        i++;
                    }
                    else{
                        li.add(new Integer[]{secondList[j][0],secondList[j][1]});
                        j++;
                    }
                }
            }
            //    ---------
            // ---------
            else{
                if(secondList[j][1]<firstList[i][0])
                    j++;
                else{
                    if(firstList[i][1]<secondList[j][1]){
                        li.add(new Integer[]{firstList[i][0],firstList[i][1]});
                        i++;
                    }
                    else{
                        li.add(new Integer[]{firstList[i][0],secondList[j][1]});
                        j++;
                    }
                }
            }
        }
        
        int[][] ans=new int[li.size()][2];
        for(i=0;i<ans.length;i++){
            ans[i][0]=li.get(i)[0];
            ans[i][1]=li.get(i)[1];
        }
        return ans;
    }
}