/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        // if(lists.length==0)
        //     return null;
        PriorityQueue<Integer> pq=new PriorityQueue<>();
        for(int i=0;i<lists.length;i++){
            ListNode temp=lists[i];
            while(temp!=null){
                pq.add(temp.val);
                temp=temp.next;
            }
        }
        if(pq.size()==0)
            return null;
        // while(pq.size()!=0)
        // System.out.println(pq.remove());
        // return lists[0];
        ListNode ans=new ListNode();
        if(pq.size()!=0)
            ans.val=pq.remove();
        ListNode store=ans;
        while(pq.size()!=0){
            ans.next=new ListNode(pq.remove());
            ans=ans.next;
        }
        return store;
    }
}