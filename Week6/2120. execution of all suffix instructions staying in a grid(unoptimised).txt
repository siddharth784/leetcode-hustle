class Solution {
    public int[] executeInstructions(int n, int[] startPos, String s) {
        int[][] grid=new int[n][n];
        int[] ans=new int[s.length()];
        int x=startPos[0];
        int y=startPos[1];
        for(int i=0;i<s.length();i++){
            startPos[0]=x;
            startPos[1]=y;
            ans[i]=movesallowed(grid,startPos,s.substring(i));
        }
        return ans;
    }
    
    int movesallowed(int[][] grid, int[] startPos, String s){
        if(startPos[0]<0 || startPos[1]<0 || startPos[0]>=grid.length || startPos[1]>=grid[0].length)
            return -1;
        if(s.equals(""))
            return 0;
        // System.out.println("we are at "+startPos[0]+startPos[1]);
        int x=startPos[0];
        int y=startPos[1];
        char ch=s.charAt(0);
        int ans=0;
        if(ch=='U')
            startPos[0]--;  
        else if(ch=='R')
            startPos[1]++;
        else if(ch=='D')
            startPos[0]++;
        else if(ch=='L')
            startPos[1]--;
        int moves= (1+movesallowed(grid,startPos,s.substring(1)));
        // startPos[0]=x;
        // startPos[1]=y;
        return moves;
    }
}