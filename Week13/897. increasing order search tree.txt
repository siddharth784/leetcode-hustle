/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    ArrayList<Integer> al=new ArrayList<>();
    public TreeNode increasingBST(TreeNode root) {
        if(root==null)
            return null;
        traverse(root);
        Collections.sort(al);
        return build(al,0);
    }
    public TreeNode build(ArrayList<Integer> al, int idx){
        if(idx>=al.size())
            return null;
        TreeNode node=new TreeNode(al.get(idx++),null,build(al,idx));
        return node;        
    }
    public void traverse(TreeNode root){
        if(root==null)
            return;
        al.add(root.val);
        traverse(root.left);
        traverse(root.right);
    }
}