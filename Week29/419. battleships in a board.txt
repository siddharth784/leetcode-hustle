class Solution {
    public int countBattleships(char[][] board) {
        //dfs
        int m=board.length,n=board[0].length;
        int ans=0;
        boolean[][] vis=new boolean[m][n];
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(board[i][j]=='X' && vis[i][j]==false){
                    dfs(board,i,j,vis);
                    ans++;
                }
            }
        }
        return ans;
        
    }
    
    public void dfs(char[][] board, int row, int col, boolean[][] vis){
        vis[row][col]=true;
        if(row>0 && board[row-1][col]=='X' && vis[row-1][col]==false)
            dfs(board,row-1,col,vis);
        
        if(row<board.length-1 && board[row+1][col]=='X' && vis[row+1][col]==false)
            dfs(board,row+1,col,vis);
        
        if(col>0 && board[row][col-1]=='X' && vis[row][col-1]==false)
            dfs(board,row,col-1,vis);
        
        if(col<board[0].length-1 && board[row][col+1]=='X' && vis[row][col+1]==false)
            dfs(board,row,col+1,vis);
        
    }
}