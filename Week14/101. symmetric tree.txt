/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
        return areSubtreeSame(root.left,root.right);
    }
    
    public boolean areSubtreeSame(TreeNode root1, TreeNode root2){
        if(root1==null && root2==null)
            return true;
        else if(root1==null || root2==null)
            return false;
        return (root1.val == root2.val && (areSubtreeSame(root1.left,root2.right)) && areSubtreeSame(root1.right,root2.left));
    }
}