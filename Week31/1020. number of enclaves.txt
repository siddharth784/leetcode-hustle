class Solution {
    public int numEnclaves(int[][] grid) {
        int m=grid.length,n=grid[0].length;
        // boolean[][] vis=new boolean[m][n];
        for(int i=0;i<m;i++){
            if(grid[i][0]==1)
                dfs(i,0,grid);
            if(grid[i][n-1]==1)
                dfs(i,n-1,grid);
        }
        for(int j=0;j<n;j++){
            if(grid[0][j]==1)
                dfs(0,j,grid);
            if(grid[m-1][j]==1)
                dfs(m-1,j,grid);
        }
        int count=0;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==1)
                    count++;
            }
        }
        return count;
    }
    
    public void dfs(int row, int col, int[][] grid){
        // if(vis[row][col])
        //     return;
        // vis[row][col]=true;
        grid[row][col]=0;
        if(row>0 && grid[row-1][col]==1)
            dfs(row-1,col,grid);
        if(col>0 && grid[row][col-1]==1)
            dfs(row,col-1,grid);
        if(row<grid.length-1 && grid[row+1][col]==1)
            dfs(row+1,col,grid);
        if(col<grid[0].length-1 && grid[row][col+1]==1)
            dfs(row,col+1,grid);
    }
}