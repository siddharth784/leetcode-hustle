class Solution {
    public int countSubstrings(String s) {
// THIS QUESTION IS COMPLETELY MEANT TO BE DONE USING DYNAMIC PROGRAMMING BUT SINCE CONSTRAINTS ARE LOW, THIS BRUTE FORCE TECHNIQUE OF CHECKING EACH SUBSTRING TO BE A PALINDROME, ALSO WORKED:
        
        int count=0;
        for(int i=0;i<s.length();i++){
            int j=i+1;
            while(j<=s.length()){
                if(isPalindrome(s.substring(i,j)))
                   count++;
                j++;
            }
        }
        return count;
    }
    public boolean isPalindrome(String s){
        int i=0,j=s.length()-1;
        while(i<j){
            if(s.charAt(i)!=s.charAt(j))
                return false;
            i++;
            j--;
        }
        return true;
    }
}