class Solution {
    public int longestPalindrome(String s) {
        int[] uppercase=new int[26];
        int[] lowercase=new int[26];
        for(char ch:s.toCharArray()){
            if(ch>='a'&&ch<='z')
                lowercase[ch-'a']++;
            else
                uppercase[ch-'A']++;
        }
        int ans=0;
        boolean pivotexists=false;
        for(int i=0;i<26;i++){
            ans=(lowercase[i]>1?ans+lowercase[i]-(lowercase[i]%2==0?0:1):ans);
            if(lowercase[i]%2!=0)
            pivotexists=true;
        }

        for(int i=0;i<26;i++){
            ans=(uppercase[i]>1?ans+uppercase[i]-(uppercase[i]%2==0?0:1):ans);
            if(uppercase[i]%2!=0)
                pivotexists=true;
        }
        return ans+(pivotexists?1:0);
        
    }
}