class Solution {
    public int partitionString(String s) {
        //MY 2ND APPROACH USING HASHSET
//         HashSet<Character> set=new HashSet<>();
//         int partitions=1;
//         for(int i=0;i<s.length();i++){
//             if(set.contains(s.charAt(i))){
//                 partitions++;
//                 set.clear();
//                 set.add(s.charAt(i));
//             }
//             else
//                 set.add(s.charAt(i));
//         }
//         return partitions;
//     }
// }
        //MY FIRST APPROACH USING FIXED MEMORY ARRAY. FASTER THAN 100%
        int partitions=1;
        int[] alpha=new int[26];
        for(int i=0;i<s.length();i++){
            if(alpha[s.charAt(i)-'a']==1){
                Arrays.fill(alpha,0);
                partitions++;
                alpha[s.charAt(i)-'a']++;
            }
            else
                alpha[s.charAt(i)-'a']++;
        }
        
        return partitions;
    }
}