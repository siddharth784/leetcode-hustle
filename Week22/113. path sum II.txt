/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<List<Integer>> ans=new ArrayList<>();
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        traverse(root,targetSum,new ArrayList<Integer>());
        return ans;        
    }
    public void traverse(TreeNode root, int targetsum, List<Integer> path){
        if(root==null)
            return;
        if(root.left==null && root.right==null){
            path.add(root.val);
            if(targetsum-root.val==0)
            ans.add(new ArrayList<>(path));
            path.remove(path.size()-1);
            return;
        }
        path.add(root.val);
        traverse(root.left,targetsum-root.val,path);
        traverse(root.right,targetsum-root.val,path);
        path.remove(path.size()-1);
    }
}










