So I had done n queens problem on pepcoding site using backtracking. so I knew its solution. However, when I tried doing it on leetcode, there it required the solution to be stored/printed using arraylist/list of arraylist/list of strings. 
While on pepcoding it was conviniently done using recursion on the way up, meaning we printed the board configuration whenever we got to the final row. So it was a doubt ki kaise store krenge, function return kya krega, list<string> or list<list<string>>.
Secondly it was doubtful where to use list<String> and where ArrayList<String>. the denotions are confusing to say the least.

doubts in below code:
1.)the confusion b/w list and arraylist, and where which one has to be used. 
2.)row==chessboard.length hone pe agar kisi arraylist mein add krdenge final chess config to stack element remove hone pe arraylist se bhi element remove ho jaega?

Here's the code I could max reach up to:

class Solution {
    public List<List<String>> solveNQueens(int n) {
        int[][] chessboard=new int[n][n];
        List<List<String>> ans=new ArrayList<ArrayList<String>>();
        nQueens(chessboard,0,ans);
        return ans;
    }
    
    List<String> nQueens(int[][] chessboard, int row,ArrayList<String> lsf){
        if(row==chessboard.length){
            return lsf;
        }
        for(int j=0;j<chessboard[row].length;j++){
            if(isSafe(chessboard,row,j)==true){
                String rowconfig="";
                for(int i=0;i<j;i++)
                    rowconfig+=".";
                rowconfig+="Q";
                for(int i=j+1;i<chessboard[row].length;i++)
                    rowconfig+=".";
                lsf.add(rowconfig);
                chessboard[row][j]=1;
                nQueens(chessboard,row+1,al);
                lsf.remove(rowconfig);
                chessboard[row][j]=0;
            }
        }
    }
    
    ArrayList<String> chessboardToList(int[][] arr){
        ArrayList<String> ans=new ArrayList<>();
        for(int i=0;i<arr.length;i++){
            String s=new String("");
            for(int j=0;j<arr[0].length;j++){
                if(arr[i][j]==0)
                    s+=".";
                else
                    s+="Q";
            }
            ans.add(s);
        }
        return ans;
    }
    
    boolean isSafe(int[][] chess, int row, int col){
        for(int i=row-1,j=col;i>=0;i--){
            if(chess[i][j]==1)
                return false;
        }
        for(int i=row-1,j=col-1;i>=0&&j>=0;i--,j--){
            if(chess[i][j]==1)
                return false;
        }
        for(int i=row-1,j=col+1;i>=0 && j<chess.length;i--,j++){
            if(chess[i][j]==1)
                return false;
        }
        return true;
    }
}